{"version":3,"sources":["partials/Button.tsx","pages/Single.tsx","partials/ButtonMp.tsx","pages/Multi.tsx","partials/Header.tsx","partials/SingleSide.tsx","partials/MultiSide.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","className","this","props","active","id","onClick","playGame","disabled","loading","name","React","Component","Single","choices","map","choice","key","result","results","filter","ch","computer","ButtonMp","setSelection","type","Multi","playerOne","mploading","playerTwo","mpresult","player_one","player_two","replayGame","Header","to","exact","activeClassName","SingleSide","cutResult","slice","victories","cr","length","clearScores","res","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Math","round","href","target","rel","MultiSide","App","useState","setChoices","setResult","setResults","setLoading","setActive","mpSetResult","mpresults","mpSetResults","mpSetLoading","setPlayerOne","setPlayerTwo","uriBase","useEffect","a","fetch","response","json","content","requestOptions","method","headers","body","JSON","stringify","player","then","data","catch","error","mpPlayGame","one","two","console","log","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15856e92.chunk.js","sourcesContent":["import React from 'react'; \n\nclass Button extends React.Component<any, any> {\n    render(){\n        return (\n            <button className={this.props.active === this.props.id ? `px-4 py-1.5 rounded border bg-main-primaryLight border-main-primary outline-none disabled:opacity-50` : `bg-gray-100 px-4 py-1.5 rounded border outline-none disabled:opacity-50` } onClick={() => this.props.playGame(this.props.id)} disabled={this.props.loading}>{this.props.name}</button>\n        )\n    }\n}\n\nexport default Button","import React from 'react';\nimport Button from '../partials/Button'\n\nclass Single extends React.Component<any, any> {\n    render() {\n        return (\n            <section>\n                <div className=\"mt-10 text-txt-low\">Welcome to Rock.Paper.Scissors.Lizard.Spock Game</div>\n                <div className=\"mt-12 mb-8 text-txt-high font-medium\">Select to play with computer</div>\n\n                <div className=\"flex\">\n                    <div className=\"flex flex-col space-y-5\">\n                        {\n                            this.props.choices.map((choice: any, key: any) => <Button name={choice.name} id={choice.id} key={key} active={this.props.active} loading={this.props.loading} playGame={this.props.playGame} />)\n                        }\n                    </div>\n                    <div className=\"border bg-gray-50 flex-auto ml-10 rounded-lg flex flex-col justify-center py-10 items-center\">\n                        {\n                            this.props.loading ? <div>Loading</div> :\n                                this.props.result && this.props.result.results ?\n                                    <div className=\"text-center\">\n                                        <div className=\"text-4xl mb-10 font-medium\">You {this.props.result.results}</div>\n                                        <div className=\"text-sm text-txt-medium\">Computer played <span className=\"font-bold text-txt-high\">{this.props.choices.filter((ch: any) => ch.id === this.props.result.computer)[0].name}</span></div>\n                                    </div>\n                                    : \n                                    <div>\n                                        <div className=\"text-sm text-txt-medium\">Click any of the button to start the game</div>\n                                    </div>\n                        }\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Single\n\n\n\n\n","import React from 'react'; \n\nclass ButtonMp extends React.Component<any, any> {\n    render(){\n        return (\n            <button onClick={() => this.props.setSelection(this.props.id, this.props.type)} className=\"bg-gray-100 px-4 py-1.5 rounded border outline-none disabled:opacity-50 mb-2\" disabled={this.props.disabled}>{this.props.name}</button>\n        )\n    }\n}\n\nexport default ButtonMp","import React from 'react';\nimport ButtonMp from '../partials/ButtonMp'\n\nclass Multi extends React.Component<any, any> {\n    render() {\n        \n        return (\n            <section>\n                <div className=\"mt-10 text-txt-low\">Welcome to Rock.Paper.Scissors.Lizard.Spock Game</div>\n                <div className=\"mt-12 mb-8 text-txt-high font-medium\">Hint: Player one will select first while player two looks away</div>\n\n                <div className=\"\">\n                    <div className=\"flex justify-between\">\n                        <div className=\"w-1/2\">\n                            <div className=\"mr-5\">\n                                <div className=\"font-semibold mb-5\">Player One</div>\n                                <div className=\"flex flex-wrap justify-start space-x-3\">\n                                    {\n                                        this.props.choices.map((choice: any, key: any) => <ButtonMp name={choice.name} id={choice.id} key={key} active={this.props.playerOne} disabled={this.props.playerOne ?? true} loading={this.props.mploading} type=\"one\" setSelection={this.props.setSelection} />)\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"w-1/2\">\n                            <div className=\"ml-5\">\n                                <div className=\"font-semibold mb-5 text-right\">Player Two</div>\n                                <div className=\"flex flex-wrap justify-end space-x-3\">\n                                    {\n                                        this.props.choices.map((choice: any, key: any) => <ButtonMp name={choice.name} id={choice.id} key={key} active={this.props.playerTwo} disabled={this.props.playerOne === 0 || this.props.playerTwo !== 0 ? true : false } loading={this.props.mploading} type=\"two\" setSelection={this.props.setSelection} />)\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"border bg-gray-50 flex-auto mt-10 rounded-lg flex flex-col justify-center items-center py-10\">\n                        {\n                            this.props.mploading ? <div>Loading</div> :\n                                this.props.mpresult && this.props.mpresult.player_one ?\n                                    <div className=\"text-center\">\n                                        <div className=\"text-4xl mb-10 font-medium\">{this.props.mpresult.results === \"win\" ? \"Player One wins\" : this.props.mpresult.results === \"tie\" ? \"A Tie\" : \"Player Two wins\" }</div>\n                                        <div className=\"text-sm text-txt-medium\">Player One played <span className=\"font-bold text-txt-high\">{this.props.choices.filter((ch: any) => ch.id === this.props.mpresult.player_one)[0].name}</span></div>\n                                        <div className=\"text-sm text-txt-medium mt-2\">Player Two played <span className=\"font-bold text-txt-high\">{this.props.choices.filter((ch: any) => ch.id === this.props.mpresult.player_two)[0].name}</span></div>\n\n                                        <div><button className=\"text-f13 text-main-primary mt-10 font-bold outline-none\" onClick={() => this.props.replayGame()}>Click here to replay</button> </div>\n                                    </div>\n                                    : \n                                    <div>\n                                        <div className=\"text-sm text-txt-medium\">Click any of the button to start the game</div>\n                                    </div>\n                        }\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Multi\n\n\n\n\n","import {\n    Link, NavLink\n  } from \"react-router-dom\";\n\nexport default function Header(){\n    return (\n        <header className=\"\">\n            <div className=\"flex justify-between\">\n            <div className=\"py-4 border-t-4 border-transparent\"><Link to=\"/\" className=\"font-semibold\">RPSSL</Link></div>\n\n            <div>\n                <ul className=\"flex space-x-6 text-sm\">\n                <li className=\"\">\n                    <NavLink exact to=\"/\" className=\"block py-4 border-t-2 border-transparent\" activeClassName=\"border-blue-500 font-medium text-txt-high\">Single Player</NavLink>\n                </li>\n                <li className=\"\">\n                    <NavLink exact to=\"/multi\" className=\"block py-4 border-t-2 border-transparent\" activeClassName=\"border-blue-500 font-medium text-txt-high\">Multi Player</NavLink>\n                </li>\n                </ul>\n            </div>\n            </div>\n        </header>\n    )\n}","import React from 'react';\n\nclass SingleSide extends React.Component<any, any> {\n    render() {\n        const cutResult = this.props.results.slice(0, 10)\n        const choose = cutResult.filter((cr: any) => cr.results === 'win' || cr.results === 'tie')\n        const victories = (choose.length / cutResult.length) * 100\n        return (\n            <div className=\"lg:w-96 mt-10 lg:mt-0 bg-gray-100 lg:h-screen px-5 lg:px-10 flex flex-col justify-between\">\n                <div>\n                    <div className=\"flex justify-between mt-5 mb-5\">\n                        <div>Scoreboard</div>\n                        {this.props.results.length > 0 ? <button onClick={this.props.clearScores} className=\"text-sm outline-none\">Clear</button> : null}\n                    </div>\n                    {\n                        this.props.results.length > 0 ? this.props.results.slice(0, 10).map((res: any, key: any) => (\n                            <div key={key} className=\"border bg-gray-50 rounded-lg px-4 py-2 mb-2\">\n                                <div className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center\">\n                                        <div className=\"text-txt-low\">{key + 1}</div>\n                                        <div className=\"ml-4 font-medium\">You {res.results}</div>\n                                    </div>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n                                    </svg>\n                                </div>\n                            </div>\n                        )) : <div className=\"text-sm text-txt-low\">No score found</div>\n                    }\n\n                    {this.props.results.length > 0 ? <div className=\"text-sm mt-5 font-bold text-center\">{Math.round(victories)}% Victory</div> : null}\n                </div>\n                <div className=\"text-f12 text-center lg:text-right mb-3 mt-10\">Developed with ❤️ by <a href=\"https://twitter.com/mixpeal\" target=\"_blank\" rel=\"noreferrer\" className=\"font-bold text-txt-high\">@mixpeal</a></div>\n            </div>\n        )\n    }\n}\n\nexport default SingleSide","import React from 'react';\n\nclass MultiSide extends React.Component<any, any> {\n    render() {\n        const cutResult = this.props.results.slice(0, 10)\n        const player_one = cutResult.filter((cr: any) => cr.results === 'win')\n        const player_two = cutResult.filter((cr: any) => cr.results === 'lose')\n        return (\n            <div className=\"lg:w-96 mt-10 lg:mt-0 bg-gray-100 lg:h-screen px-5 lg:px-10 flex flex-col justify-between\">\n                <div>\n                    <div className=\"flex justify-between mt-5 mb-5\">\n                        <div>Scoreboard</div>\n                        {this.props.results.length > 0 ? <button onClick={this.props.clearScores} className=\"text-sm outline-none\">Clear</button> : null}\n                    </div>\n                    {\n                        this.props.results.length > 0 ? this.props.results.slice(0, 10).map((res: any, key: any) => (\n                            <div key={key} className=\"border bg-gray-50 rounded-lg px-4 py-2 mb-2\">\n                                <div className=\"flex items-center justify-between\">\n                                    <div className=\"flex items-center\">\n                                        <div className=\"text-txt-low\">{key + 1}</div>\n                                        <div className=\"ml-4 font-medium\">{res.results === \"win\" ? \"Player One wins\" : res.results === \"tie\" ? \"A Tie\" : \"Player Two wins\" }</div>\n                                    </div>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n                                    </svg>\n                                </div>\n                            </div>\n                        )) : <div className=\"text-sm text-txt-low\">No score found</div>\n                    }\n\n                    {this.props.results.length > 0 ? <div className=\"text-sm mt-8 text-txt-low\">Player One: <span className=\"font-bold text-txt-high\">{player_one.length} Wins</span> </div> : null}\n                    {this.props.results.length > 0 ? <div className=\"text-sm mt-2 text-txt-low\">Player Two: <span className=\"font-bold text-txt-high\">{player_two.length} Wins</span> </div> : null}\n                </div>\n                <div className=\"text-f12 text-center lg:text-right mb-3 mt-10\">Developed with ❤️ by <a href=\"https://twitter.com/mixpeal\" target=\"_blank\" rel=\"noreferrer\" className=\"font-bold text-txt-high\">@mixpeal</a></div>\n            </div>\n        )\n    }\n}\n\nexport default MultiSide","import React from 'react';\nimport './App.css';\nimport Single from './pages/Single'\nimport Multi from './pages/Multi'\nimport Header from './partials/Header'\nimport SingleSide from './partials/SingleSide'\nimport MultiSide from './partials/MultiSide'\nimport { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [choices, setChoices] = useState([]);\n  const [result, setResult] = useState({});\n  const [results, setResults] = useState([] as any);\n  const [loading, setLoading] = useState(false);\n  const [active, setActive] = useState(0);\n\n\n  const [mpresult, mpSetResult] = useState({});\n  const [mpresults, mpSetResults] = useState([] as any);\n  const [mploading, mpSetLoading] = useState(false);\n  const [playerOne, setPlayerOne] = useState(0);\n  const [playerTwo, setPlayerTwo] = useState(0);\n\n  const uriBase = process.env.NODE_ENV === 'development' \n   ? 'http://localhost:8080'\n   : 'https://rpssl.mixpeal.com'\n\n  useEffect(() => {\n    (\n      async () => {\n        const response = await fetch(`${uriBase}/choices`)\n        const content = await response.json();\n        setChoices(content)\n      }\n    )();\n  })\n\n  const playGame = async (id: any) =>  {\n    setLoading(true)\n    setActive(id)\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ player: id })\n    };\n    fetch(`${uriBase}/play`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          setResult(data)\n          setResults([data, ...results])\n          setLoading(false)\n        })\n        .catch(error => setLoading(false));\n  } \n\n  const clearScores = () => {\n    setResults([])\n  }\n\n  const setSelection = (id: any, type: string) => {\n    if(type === \"one\"){\n      setPlayerOne(id)\n    }\n    else{\n      setPlayerTwo(id)\n      mpPlayGame(playerOne, id)\n    }\n\n  }\n\n  const mpPlayGame = async (one :any, two :any) =>  {\n    mpSetLoading(true)\n    console.log({ player_one: one, player_two:  two})\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ player_one: one, player_two:  two})\n    };\n    fetch(`${uriBase}/play-multi`, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          mpSetResult(data)\n          mpSetResults([data, ...mpresults])\n          mpSetLoading(false)\n        })\n        .catch(error => { \n          mpSetLoading(false)\n          setPlayerTwo(0)\n        });\n  } \n\n  const mpClearScores = () => {\n    mpSetResults([])\n  }\n\n  const replayGame = () => {\n      setPlayerOne(0)\n      setPlayerTwo(0)\n      mpSetResult({})\n  }\n\n  return (\n    <Router>\n      <div className=\"text-txt-high\">\n        <div className=\"lg:flex\">\n          <Switch>\n            <Route path=\"/multi\">\n              <div className=\"flex-auto px-10\">\n                <Header />\n                <Multi choices={choices} playerOne={playerOne} playerTwo={playerTwo}  mpresult={mpresult} mploading={mploading} replayGame={replayGame} setSelection={setSelection}/>\n              </div>\n              <MultiSide results={mpresults} clearScores={mpClearScores}/>\n            </Route>\n\n            <Route path=\"/\">\n              <div className=\"flex-auto px-5 lg:px-10\">\n                <Header />\n                <Single choices={choices} active={active} result={result} loading={loading} playGame={playGame}/>\n              </div>\n              <SingleSide results={results} clearScores={clearScores}/>\n            </Route>\n\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}